package group.jsjxh.community.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class QuestionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public QuestionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQnoIsNull() {
            addCriterion("QNO is null");
            return (Criteria) this;
        }

        public Criteria andQnoIsNotNull() {
            addCriterion("QNO is not null");
            return (Criteria) this;
        }

        public Criteria andQnoEqualTo(Integer value) {
            addCriterion("QNO =", value, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoNotEqualTo(Integer value) {
            addCriterion("QNO <>", value, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoGreaterThan(Integer value) {
            addCriterion("QNO >", value, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoGreaterThanOrEqualTo(Integer value) {
            addCriterion("QNO >=", value, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoLessThan(Integer value) {
            addCriterion("QNO <", value, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoLessThanOrEqualTo(Integer value) {
            addCriterion("QNO <=", value, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoIn(List<Integer> values) {
            addCriterion("QNO in", values, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoNotIn(List<Integer> values) {
            addCriterion("QNO not in", values, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoBetween(Integer value1, Integer value2) {
            addCriterion("QNO between", value1, value2, "qno");
            return (Criteria) this;
        }

        public Criteria andQnoNotBetween(Integer value1, Integer value2) {
            addCriterion("QNO not between", value1, value2, "qno");
            return (Criteria) this;
        }

        public Criteria andQtitleIsNull() {
            addCriterion("QTITLE is null");
            return (Criteria) this;
        }

        public Criteria andQtitleIsNotNull() {
            addCriterion("QTITLE is not null");
            return (Criteria) this;
        }

        public Criteria andQtitleEqualTo(String value) {
            addCriterion("QTITLE =", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleNotEqualTo(String value) {
            addCriterion("QTITLE <>", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleGreaterThan(String value) {
            addCriterion("QTITLE >", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleGreaterThanOrEqualTo(String value) {
            addCriterion("QTITLE >=", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleLessThan(String value) {
            addCriterion("QTITLE <", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleLessThanOrEqualTo(String value) {
            addCriterion("QTITLE <=", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleLike(String value) {
            addCriterion("QTITLE like", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleNotLike(String value) {
            addCriterion("QTITLE not like", value, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleIn(List<String> values) {
            addCriterion("QTITLE in", values, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleNotIn(List<String> values) {
            addCriterion("QTITLE not in", values, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleBetween(String value1, String value2) {
            addCriterion("QTITLE between", value1, value2, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQtitleNotBetween(String value1, String value2) {
            addCriterion("QTITLE not between", value1, value2, "qtitle");
            return (Criteria) this;
        }

        public Criteria andQcreateAtIsNull() {
            addCriterion("QCREATE_AT is null");
            return (Criteria) this;
        }

        public Criteria andQcreateAtIsNotNull() {
            addCriterion("QCREATE_AT is not null");
            return (Criteria) this;
        }

        public Criteria andQcreateAtEqualTo(Date value) {
            addCriterion("QCREATE_AT =", value, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtNotEqualTo(Date value) {
            addCriterion("QCREATE_AT <>", value, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtGreaterThan(Date value) {
            addCriterion("QCREATE_AT >", value, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("QCREATE_AT >=", value, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtLessThan(Date value) {
            addCriterion("QCREATE_AT <", value, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtLessThanOrEqualTo(Date value) {
            addCriterion("QCREATE_AT <=", value, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtIn(List<Date> values) {
            addCriterion("QCREATE_AT in", values, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtNotIn(List<Date> values) {
            addCriterion("QCREATE_AT not in", values, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtBetween(Date value1, Date value2) {
            addCriterion("QCREATE_AT between", value1, value2, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQcreateAtNotBetween(Date value1, Date value2) {
            addCriterion("QCREATE_AT not between", value1, value2, "qcreateAt");
            return (Criteria) this;
        }

        public Criteria andQauthorIsNull() {
            addCriterion("QAUTHOR is null");
            return (Criteria) this;
        }

        public Criteria andQauthorIsNotNull() {
            addCriterion("QAUTHOR is not null");
            return (Criteria) this;
        }

        public Criteria andQauthorEqualTo(Integer value) {
            addCriterion("QAUTHOR =", value, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorNotEqualTo(Integer value) {
            addCriterion("QAUTHOR <>", value, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorGreaterThan(Integer value) {
            addCriterion("QAUTHOR >", value, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorGreaterThanOrEqualTo(Integer value) {
            addCriterion("QAUTHOR >=", value, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorLessThan(Integer value) {
            addCriterion("QAUTHOR <", value, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorLessThanOrEqualTo(Integer value) {
            addCriterion("QAUTHOR <=", value, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorIn(List<Integer> values) {
            addCriterion("QAUTHOR in", values, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorNotIn(List<Integer> values) {
            addCriterion("QAUTHOR not in", values, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorBetween(Integer value1, Integer value2) {
            addCriterion("QAUTHOR between", value1, value2, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQauthorNotBetween(Integer value1, Integer value2) {
            addCriterion("QAUTHOR not between", value1, value2, "qauthor");
            return (Criteria) this;
        }

        public Criteria andQupdateAtIsNull() {
            addCriterion("QUPDATE_AT is null");
            return (Criteria) this;
        }

        public Criteria andQupdateAtIsNotNull() {
            addCriterion("QUPDATE_AT is not null");
            return (Criteria) this;
        }

        public Criteria andQupdateAtEqualTo(Date value) {
            addCriterion("QUPDATE_AT =", value, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtNotEqualTo(Date value) {
            addCriterion("QUPDATE_AT <>", value, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtGreaterThan(Date value) {
            addCriterion("QUPDATE_AT >", value, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("QUPDATE_AT >=", value, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtLessThan(Date value) {
            addCriterion("QUPDATE_AT <", value, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtLessThanOrEqualTo(Date value) {
            addCriterion("QUPDATE_AT <=", value, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtIn(List<Date> values) {
            addCriterion("QUPDATE_AT in", values, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtNotIn(List<Date> values) {
            addCriterion("QUPDATE_AT not in", values, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtBetween(Date value1, Date value2) {
            addCriterion("QUPDATE_AT between", value1, value2, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQupdateAtNotBetween(Date value1, Date value2) {
            addCriterion("QUPDATE_AT not between", value1, value2, "qupdateAt");
            return (Criteria) this;
        }

        public Criteria andQreadIsNull() {
            addCriterion("QREAD is null");
            return (Criteria) this;
        }

        public Criteria andQreadIsNotNull() {
            addCriterion("QREAD is not null");
            return (Criteria) this;
        }

        public Criteria andQreadEqualTo(Integer value) {
            addCriterion("QREAD =", value, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadNotEqualTo(Integer value) {
            addCriterion("QREAD <>", value, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadGreaterThan(Integer value) {
            addCriterion("QREAD >", value, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadGreaterThanOrEqualTo(Integer value) {
            addCriterion("QREAD >=", value, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadLessThan(Integer value) {
            addCriterion("QREAD <", value, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadLessThanOrEqualTo(Integer value) {
            addCriterion("QREAD <=", value, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadIn(List<Integer> values) {
            addCriterion("QREAD in", values, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadNotIn(List<Integer> values) {
            addCriterion("QREAD not in", values, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadBetween(Integer value1, Integer value2) {
            addCriterion("QREAD between", value1, value2, "qread");
            return (Criteria) this;
        }

        public Criteria andQreadNotBetween(Integer value1, Integer value2) {
            addCriterion("QREAD not between", value1, value2, "qread");
            return (Criteria) this;
        }

        public Criteria andQlikeIsNull() {
            addCriterion("QLIKE is null");
            return (Criteria) this;
        }

        public Criteria andQlikeIsNotNull() {
            addCriterion("QLIKE is not null");
            return (Criteria) this;
        }

        public Criteria andQlikeEqualTo(Integer value) {
            addCriterion("QLIKE =", value, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeNotEqualTo(Integer value) {
            addCriterion("QLIKE <>", value, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeGreaterThan(Integer value) {
            addCriterion("QLIKE >", value, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeGreaterThanOrEqualTo(Integer value) {
            addCriterion("QLIKE >=", value, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeLessThan(Integer value) {
            addCriterion("QLIKE <", value, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeLessThanOrEqualTo(Integer value) {
            addCriterion("QLIKE <=", value, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeIn(List<Integer> values) {
            addCriterion("QLIKE in", values, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeNotIn(List<Integer> values) {
            addCriterion("QLIKE not in", values, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeBetween(Integer value1, Integer value2) {
            addCriterion("QLIKE between", value1, value2, "qlike");
            return (Criteria) this;
        }

        public Criteria andQlikeNotBetween(Integer value1, Integer value2) {
            addCriterion("QLIKE not between", value1, value2, "qlike");
            return (Criteria) this;
        }

        public Criteria andQshitIsNull() {
            addCriterion("QSHIT is null");
            return (Criteria) this;
        }

        public Criteria andQshitIsNotNull() {
            addCriterion("QSHIT is not null");
            return (Criteria) this;
        }

        public Criteria andQshitEqualTo(Integer value) {
            addCriterion("QSHIT =", value, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitNotEqualTo(Integer value) {
            addCriterion("QSHIT <>", value, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitGreaterThan(Integer value) {
            addCriterion("QSHIT >", value, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitGreaterThanOrEqualTo(Integer value) {
            addCriterion("QSHIT >=", value, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitLessThan(Integer value) {
            addCriterion("QSHIT <", value, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitLessThanOrEqualTo(Integer value) {
            addCriterion("QSHIT <=", value, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitIn(List<Integer> values) {
            addCriterion("QSHIT in", values, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitNotIn(List<Integer> values) {
            addCriterion("QSHIT not in", values, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitBetween(Integer value1, Integer value2) {
            addCriterion("QSHIT between", value1, value2, "qshit");
            return (Criteria) this;
        }

        public Criteria andQshitNotBetween(Integer value1, Integer value2) {
            addCriterion("QSHIT not between", value1, value2, "qshit");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_QUES
     *
     * @mbg.generated do_not_delete_during_merge Sat Nov 23 12:36:46 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_QUES
     *
     * @mbg.generated Sat Nov 23 12:36:46 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}